---
  apiVersion: apps/v1
  kind: Deployment                 # Type of Kubernetes resource
  metadata:
    name: gokubedash           # Name of the Kubernetes resource
  spec:
    replicas: 3                    # Number of pods to run at any given time
    selector:
      matchLabels:
        app: go-k8s        # This deployment applies to any Pods matching the specified label
    template:                      # This deployment will create a set of pods using the configurations in this template
      metadata:
        labels:                    # The labels that will be applied to all of the pods in this deployment
          app: go-k8s 
      spec:                        # Spec for the container which will run in the Pod
        containers:
        - name: go-k8s
          image: jdockerty/go-k8s:1.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081  # Should match the port number that the Go application listens on
          livenessProbe:           # To check the health of the Pod
            httpGet:
              path: /
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          readinessProbe:          # To check if the Pod is ready to serve traffic or not
            httpGet:
              path: /
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1    
---
apiVersion: v1
kind: Service                    # Type of kubernetes resource
metadata:
  name: gokubedash-service   # Name of the resource
spec:
  type: NodePort                 # A port is opened on each node in your cluster via Kube proxy.
  ports:                         # Take incoming HTTP requests on port 9090 and forward them to the targetPort of 8080
  - name: http
    port: 9090
    targetPort: 8080
  selector:
    app: go-k8s         # Map any pod with label `app=go-hello-world` to this service